name: Build and Release XPI

# Controls when the action will run.
on:
  push:
    branches: [ main ] # Or your default branch
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0
  pull_request:
    branches: [ main ] # Or your default branch
    types: [ opened, synchronize ] # Trigger on PR open/update
  workflow_dispatch: # Allows manual triggering

# Need write permission for contents to create releases
permissions:
  contents: write

jobs:
  lint:
    name: Run Linter
    uses: ./.github/workflows/reusable-lint.yml # Use local reusable workflow
    permissions: {}
    secrets: inherit

  build:
    name: Build XPI Package
    needs: lint # Ensure lint passes before building
    uses: ./.github/workflows/reusable-build.yml # Use local reusable workflow
    permissions: {}
    secrets: inherit
    # This workflow now uploads the artifact 'rait-build-xpi'

  create_release:
    name: Create GitHub Release
    needs: build # Wait for the build job (which calls reusable-build) to succeed
    runs-on: ubuntu-latest
    steps:
      - name: Download XPI artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: rait-build-xpi # Name of the artifact uploaded by reusable-build.yml
          # No path needed, it downloads to the current directory

      - name: Verify downloaded XPI exists
        # Use ls with wildcard as we might not know the exact version in the filename here
        run: ls -l *.xpi

      - name: Create Release and Upload XPI
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }} # Use the tag that triggered the workflow
          name: Release ${{ github.ref_name }}
          body: "Release based on tag ${{ github.ref_name }}. Commit: ${{ github.sha }}"
          # Mark as pre-release if tag contains -rc, -beta, etc.
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}
          # Use wildcard to find the downloaded XPI
          files: "*.xpi"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needs the token to create releases
